package Biblioteca;


/**
* Biblioteca/GestionBibliotecaPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Biblioteca.idl
* domingo 30 de marzo de 2025 00H52' CET
*/


// Define la interfaz para el sistema de gestión de la biblioteca
public abstract class GestionBibliotecaPOA extends org.omg.PortableServer.Servant
 implements Biblioteca.GestionBibliotecaOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("buscarLibro", new java.lang.Integer (0));
    _methods.put ("prestarLibro", new java.lang.Integer (1));
    _methods.put ("devolverLibro", new java.lang.Integer (2));
    _methods.put ("mostrarLibros", new java.lang.Integer (3));
    _methods.put ("obtenerAutor", new java.lang.Integer (4));
    _methods.put ("buscarPorAutor", new java.lang.Integer (5));
    _methods.put ("obtenerLibrosNoDisponibles", new java.lang.Integer (6));
    _methods.put ("verDetallesLibro", new java.lang.Integer (7));
    _methods.put ("anadirLibro", new java.lang.Integer (8));
    _methods.put ("eliminarLibro", new java.lang.Integer (9));
    _methods.put ("actualizarLibro", new java.lang.Integer (10));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  // Busca un libro por título y devuelve los detalles del libro
       case 0:  // Biblioteca/GestionBiblioteca/buscarLibro
       {
         String titulo = in.read_string ();
         Biblioteca.Libro $result = null;
         $result = this.buscarLibro (titulo);
         out = $rh.createReply();
         Biblioteca.LibroHelper.write (out, $result);
         break;
       }


  // Presta un libro, cambiando su estado a no disponible
       case 1:  // Biblioteca/GestionBiblioteca/prestarLibro
       {
         String ISBN = in.read_string ();
         boolean $result = false;
         $result = this.prestarLibro (ISBN);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  // Devuelve un libro, cambiando su estado a disponible
       case 2:  // Biblioteca/GestionBiblioteca/devolverLibro
       {
         String ISBN = in.read_string ();
         boolean $result = false;
         $result = this.devolverLibro (ISBN);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  // Mostrar todos los libros
       case 3:  // Biblioteca/GestionBiblioteca/mostrarLibros
       {
         Biblioteca.Libro $result[] = null;
         $result = this.mostrarLibros ();
         out = $rh.createReply();
         Biblioteca.GestionBibliotecaPackage.ListaLibrosHelper.write (out, $result);
         break;
       }


  // Nuevas operaciones
       case 4:  // Biblioteca/GestionBiblioteca/obtenerAutor
       {
         String titulo = in.read_string ();
         String $result = null;
         $result = this.obtenerAutor (titulo);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 5:  // Biblioteca/GestionBiblioteca/buscarPorAutor
       {
         String autor = in.read_string ();
         Biblioteca.Libro $result[] = null;
         $result = this.buscarPorAutor (autor);
         out = $rh.createReply();
         Biblioteca.GestionBibliotecaPackage.ListaLibrosHelper.write (out, $result);
         break;
       }

       case 6:  // Biblioteca/GestionBiblioteca/obtenerLibrosNoDisponibles
       {
         Biblioteca.Libro $result[] = null;
         $result = this.obtenerLibrosNoDisponibles ();
         out = $rh.createReply();
         Biblioteca.GestionBibliotecaPackage.ListaLibrosHelper.write (out, $result);
         break;
       }

       case 7:  // Biblioteca/GestionBiblioteca/verDetallesLibro
       {
         String ISBN = in.read_string ();
         String $result = null;
         $result = this.verDetallesLibro (ISBN);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }


  // Operaciones adicionales de gestión
       case 8:  // Biblioteca/GestionBiblioteca/anadirLibro
       {
         Biblioteca.Libro libro = Biblioteca.LibroHelper.read (in);
         boolean $result = false;
         $result = this.anadirLibro (libro);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 9:  // Biblioteca/GestionBiblioteca/eliminarLibro
       {
         String ISBN = in.read_string ();
         boolean $result = false;
         $result = this.eliminarLibro (ISBN);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 10:  // Biblioteca/GestionBiblioteca/actualizarLibro
       {
         Biblioteca.Libro libro = Biblioteca.LibroHelper.read (in);
         boolean $result = false;
         $result = this.actualizarLibro (libro);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Biblioteca/GestionBiblioteca:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public GestionBiblioteca _this() 
  {
    return GestionBibliotecaHelper.narrow(
    super._this_object());
  }

  public GestionBiblioteca _this(org.omg.CORBA.ORB orb) 
  {
    return GestionBibliotecaHelper.narrow(
    super._this_object(orb));
  }


} // class GestionBibliotecaPOA
