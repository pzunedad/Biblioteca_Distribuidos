package Biblioteca;


/**
* Biblioteca/_GestionBibliotecaStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Biblioteca.idl
* domingo 30 de marzo de 2025 00H52' CET
*/


// Define la interfaz para el sistema de gestión de la biblioteca
public class _GestionBibliotecaStub extends org.omg.CORBA.portable.ObjectImpl implements Biblioteca.GestionBiblioteca
{


  // Busca un libro por título y devuelve los detalles del libro
  public Biblioteca.Libro buscarLibro (String titulo)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("buscarLibro", true);
                $out.write_string (titulo);
                $in = _invoke ($out);
                Biblioteca.Libro $result = Biblioteca.LibroHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return buscarLibro (titulo        );
            } finally {
                _releaseReply ($in);
            }
  } // buscarLibro


  // Presta un libro, cambiando su estado a no disponible
  public boolean prestarLibro (String ISBN)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("prestarLibro", true);
                $out.write_string (ISBN);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return prestarLibro (ISBN        );
            } finally {
                _releaseReply ($in);
            }
  } // prestarLibro


  // Devuelve un libro, cambiando su estado a disponible
  public boolean devolverLibro (String ISBN)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("devolverLibro", true);
                $out.write_string (ISBN);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return devolverLibro (ISBN        );
            } finally {
                _releaseReply ($in);
            }
  } // devolverLibro


  // Mostrar todos los libros
  public Biblioteca.Libro[] mostrarLibros ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("mostrarLibros", true);
                $in = _invoke ($out);
                Biblioteca.Libro $result[] = Biblioteca.GestionBibliotecaPackage.ListaLibrosHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return mostrarLibros (        );
            } finally {
                _releaseReply ($in);
            }
  } // mostrarLibros


  // Nuevas operaciones
  public String obtenerAutor (String titulo)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("obtenerAutor", true);
                $out.write_string (titulo);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return obtenerAutor (titulo        );
            } finally {
                _releaseReply ($in);
            }
  } // obtenerAutor

  public Biblioteca.Libro[] buscarPorAutor (String autor)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("buscarPorAutor", true);
                $out.write_string (autor);
                $in = _invoke ($out);
                Biblioteca.Libro $result[] = Biblioteca.GestionBibliotecaPackage.ListaLibrosHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return buscarPorAutor (autor        );
            } finally {
                _releaseReply ($in);
            }
  } // buscarPorAutor

  public Biblioteca.Libro[] obtenerLibrosNoDisponibles ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("obtenerLibrosNoDisponibles", true);
                $in = _invoke ($out);
                Biblioteca.Libro $result[] = Biblioteca.GestionBibliotecaPackage.ListaLibrosHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return obtenerLibrosNoDisponibles (        );
            } finally {
                _releaseReply ($in);
            }
  } // obtenerLibrosNoDisponibles

  public String verDetallesLibro (String ISBN)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("verDetallesLibro", true);
                $out.write_string (ISBN);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return verDetallesLibro (ISBN        );
            } finally {
                _releaseReply ($in);
            }
  } // verDetallesLibro


  // Operaciones adicionales de gestión
  public boolean anadirLibro (Biblioteca.Libro libro)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("anadirLibro", true);
                Biblioteca.LibroHelper.write ($out, libro);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return anadirLibro (libro        );
            } finally {
                _releaseReply ($in);
            }
  } // anadirLibro

  public boolean eliminarLibro (String ISBN)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("eliminarLibro", true);
                $out.write_string (ISBN);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return eliminarLibro (ISBN        );
            } finally {
                _releaseReply ($in);
            }
  } // eliminarLibro

  public boolean actualizarLibro (Biblioteca.Libro libro)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("actualizarLibro", true);
                Biblioteca.LibroHelper.write ($out, libro);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return actualizarLibro (libro        );
            } finally {
                _releaseReply ($in);
            }
  } // actualizarLibro

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Biblioteca/GestionBiblioteca:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     com.sun.corba.se.impl.orbutil.IORCheckImpl.check(str, "Biblioteca._GestionBibliotecaStub");
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _GestionBibliotecaStub
